# Copyright (c) 2021 Terminus, Inc.
#
# This program is free software: you can use, redistribute, and/or modify
# it under the terms of the GNU Affero General Public License, version 3
# or later ("AGPL"), as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

name: tools-pkg-release
displayName: Erda 版本包发布
logoUrl: http://terminus-paas.oss-cn-hangzhou.aliyuncs.com/paas-doc/2021/04/14/1a196371-6cb6-4095-9928-3595d1222e66.png
version: 1.0
type: action
category: deploy_management
desc: >-
  release erda install package：erda-tools.$erda_version.tar.gz(enterprise)、erda-release.$erda_version.tar.gz(public)

public: true
supportedVersion:
  - ">1.0"


params:
  - name: erda_version
    type: string
    desc: the version of erda. use erda tag version
    required: true

  - name: repo_erda_tools
    type: string
    desc: the repository of erda-tools. get from forener action git-checkout
    required: true

  - name: repo_erda_release
    type: string
    desc: the repository of erda-tools. get from forener action git-checkout
    required: true

  - name: repo_version
    type: string
    desc: the repository of version. get from forener action git-checkout
    required: true

  - name: oss
    type: struct
    desc: the config info of oss
    required: true
    struct:
      - { name: endpoint, type: string, default: "", desc: "endpoint of oss" }
      - { name: accessKeyID, type: string, default: master, desc: "access key of oss" }
      - { name: accessKeySecret, type: string, default: , desc: "secret key of oss" }

outputs:
  - name: erdaVersion
  - name: publicUrl
    type: privateUrl


accessibleAPIs:
  - path: /api/repo/<*>
    method: POST
    schema: http

  - path: /api/releases/<releaseId>/actions/get-dice
    method: GET
    schema: http


formProps:
  - key: params
    component: formGroup
    group: params
    componentProps:
      title: 任务参数

  - label: 工作目录
    component: input
    key: params.workdir
    componentProps:
      placeholder: ${git-checkout}
    group: params
    defaultValue: ${git-checkout}
    labelTip: 工作目录, 默认为 ${git-checkout} , 也即源仓库所在目录。action 从仓库中读取 VERSION 文件、migrations 脚本等。

  - label: 源仓库 migrations 目录
    component: input
    key: params.migrations_dir
    componentProps:
      placeholder: .dice/migraions
    group: params
    defaultValue: .dice/migrations
    labelTip: migrations 脚本所在目录, 默认为 .dice/migraions，也可以设置为其他目录，如 .erda/migrations 。

  - label: 应用打包发布制品的 releaseID
    component: input
    key: params.releaseID
    componentProps:
      placeholder: ${release:OUTPUT:realeseID}
    group: params
    defaultValue: ${release:OUTPUT:realeseID}
    labelTip: 应用打包发布制品的 releaseID, 默认为 ${release:OUTPUT:realeseID}

  - label: 目标仓库名称
    component: input
    key: params.dst.repoName
    group: params
    labelTip: 目标仓库名称，默认为 version。注意目标仓库应当是本项目下的。
    defaultValue: version

  - label: 目标仓库的 base 分支名称
    component: input
    key: params.dst.branch
    group: params
    labelTip: 目标仓库的 base 分支名称，默认为 master。此 action 从该分支切出新分支，修改后又向该分支提交 MR 。
    defaultValue: master

  - label: 制品快照（dice.yml）归档时的父目录名称
    component: input
    key: params.dst.snapName
    group: params
    labelTip: 制品快照（dice.yml）归档时的父目录名称。为空时为当前仓库名称。如 erda 仓库归档后制品快照文件路径为 <version>/releases/<snapName>/dice.yml
    componentProps:
      placeholder: 为空时默认为当前仓库名称

  - label: 旧的 registry host
    component: input
    key: params.registry_replacement.old
    group: params
    labelTip: 要替换的原始 registry host, 为空时 action 会自动识别 registy host 并替换
    componentProps:
      placeholder: 要替换的原始 registry host, 为空时 action 会自动识别 registy host 并替换

  - label: 新的 registry host
    component: input
    key: params.registry_replacement.new
    group: params
    labelTip: 要替换的目标 registry host, 为空时不会发生替换
    componentProps:
      placeholder: 要替换的目标 registry host, 为空时不会发生替换

  - label: MR 处理人
    component: memberSelector
    required: true
    key: params.mr_processor
    group: params
    labelTip: 指定 MergeRequest 的处理人
    componentProps:
      scopeType: app
      placeholder: 下拉指定处理 MR 的用户
